[include moonraker_obico_macros.cfg]
# This file contains pin mappings for the stock 2022 Creality Ender 3
# V3 SE. To use this config, during "make menuconfig" select the
# STM32F103 with a "28KiB bootloader" and serial (on USART1 PA10/PA9)
# communication.

# If you prefer a direct serial connection, in "make menuconfig"
# select "Enable extra low-level configuration options" and select
# serial (on USART3 PB11/PB10), which is broken out on the 10 pin IDC
# cable used for the LCD module as follows:
# 3: Tx, 4: Rx, 9: GND, 10: VCC

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# This also works for the GD32F303 based Creality 4.2.2 board.

# See docs/Config_Reference.md for a description of parameters.


[virtual_sdcard] 
path:/home/biqu/SovolSV07Plus_data/gcodes

[pause_resume]

[display_status]

[idle_timeout]
gcode:
    RESPOND TYPE=echo MSG="No operations in 30min!"
  {% if printer.pause_resume.is_paused %}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  {% else %}
    TURN_OFF_HEATERS
    M84
  {% endif %}
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
timeout: 1800

[mcu CB1]
serial: /tmp/klipper_host_mcu   
[adxl345]
cs_pin: CB1:None
spi_bus: spidev1.1
#axes_map: x,y,z  # Modify according to the actual orientation of the ADXL345 installed on the printer.

[resonance_tester]
accel_chip: adxl345
probe_points:
    100, 100, 20  # an example
    
[input_shaper]
shaper_freq_x: 59.8
shaper_type_x: ei
shaper_freq_y: 36.0
shaper_type_y: mzv

[verify_heater extruder]
max_error: 60
check_gain_time:20
hysteresis: 5
heating_gain: 2

[verify_heater heater_bed]
max_error: 180
check_gain_time:120
hysteresis: 5
heating_gain: 2

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    150, 150, 20  # an example
#accel_per_hz:100
#min_freq:1
#max_freq:100
#max_smoothing:0.2
#hz_per_sec:0.5

[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "error!"
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

#############################################################################################################
#GCODE_MACRO
#############################################################################################################
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    RUN_SHELL_COMMAND CMD=clear_plr
    clear_last_file
    G31
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    RESPOND TYPE=echo MSG="Cancel Print Success!"
    G91 ;Relative positionning
    G1 E-2 F500 ;Retract a bit
    G1 E-2 Z0.2 F200 ;Retract and raise Z
    G1 Z1 ;Raise Z more
    M106 S0 ;Turn-off fan
    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed
    G90
    G1 X10 Y290 F6000
    M84 X Y E ;Disable all steppers but Z

[gcode_macro START_PRINT]
gcode:
 M84 E ; Disable E Motor for probe accuracy on direct drive systems
 G90 ;Absolute positioning
 G92 E0 ; Reset Extruder distance to 0
 G1 E-1 ; Retracts filament to prevent blobs during probing
 G92 E0 ; Reset Extruder distance to 0
 G28 ; home all axes
 BED_MESH_PROFILE LOAD=default ; Loads the mesh - now has to be done explicitly, not automatically loaded anymore

 G92 E0     ; reset extruder
 G1 Z1.0 F3000    ; move z up little to prevent scratching of surface
 G1 X0.1 Y20 Z0.3 F5000.0  ; move to start-line position
 G1 X0.1 Y100.0 Z0.3 F500.0 E15  ; draw 1st line
 G1 X0.4 Y100.0 Z0.3 F5000.0  ; move to side a little
 G1 X0.4 Y20 Z0.3 F500.0 E30  ; draw 2nd line
 G92 E0     ; reset extruder
 G1 Z1.0 F3000    ; move z up little to prevent scratching of surface

[gcode_macro PAUSE] 
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    RESPOND TYPE=echo MSG="Pause Print!"
    ##### set defaults #####
    {% set x = params.X|default(10) %}      #edit to your park position
    {% set y = params.Y|default(290) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F500
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]  
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    RESPOND TYPE=echo MSG="RESUME Print!"
    ##### set defaults #####
    {% if printer["filament_switch_sensor my_sensor"].filament_detected == True %} # detect if occur filament runout ,True : filament exists. Â False:filament runout
        RESPOND TYPE=echo MSG="RESUME Print!"
        {% set e = params.E|default(1) %} #edit to your retract length
      #### get VELOCITY parameter if specified ####
        {% if 'VELOCITY' in params|upper %}
            {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
        {%else %}
            {% set get_params = "" %}
        {% endif %}
      ##### end of definitions #####
      G91
        {% if printer.extruder.can_extrude|lower == 'true' %}
          G1 E{e} F400
        {% else %}
            {action_respond_info("Extruder not hot enough")}
        {% endif %} 
            RESUME_BASE {get_params}
    {% else %}
        RESPOND TYPE=echo MSG="Please Insert filament in Sensor!"
    {% endif %} 

[gcode_macro END_PRINT]
gcode:
    G91 ;Relative positionning
    G1 E-2 F500 ;Retract a bit
    G1 E-2 Z0.2 F200 ;Retract and raise Z
    G1 X5 Y5 F3000 ;Wipe out
    G1 Z1 ;Raise Z more
    M106 S0 ;Turn-off fan
    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed
    G90 ;Absolute positionning
    G1 X10 Y290 ;Present print

    M84 X Y E ;Disable all steppers but Z
    RESPOND TYPE=echo MSG="Finish Print!"

[gcode_macro LOAD_FILAMENT]
gcode:
    G91 
    G1 E30 F300
    G1 E10 F150
    G90

[gcode_macro UNLOAD_FILAMENT]
gcode:
    G91
    G1 E-30 F300
    G90

[gcode_macro M420]
description: Load the current mesh
gcode:
  BED_MESH_PROFILE LOAD=default

[exclude_object]

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[force_move]
enable_force_move: True

[gcode_macro calibrate_probe]
gcode:
    probe_calibrate

[gcode_macro pid_nozzle]
gcode:
    TURN_OFF_HEATERS
    PID_CALIBRATE HEATER=extruder TARGET=230
    SAVE_CONFIG
    
[gcode_macro pid_bed]
gcode:
    TURN_OFF_HEATERS
    PID_CALIBRATE HEATER=heater_bed TARGET=65
    SAVE_CONFIG

[temperature_sensor BTT_Pad_7]
sensor_type: temperature_host
#min_temp: 10
#max_temp: 105

[temperature_sensor GD32F303]
sensor_type: temperature_mcu
#sensor_temperature1: 25
#sensor_adc1: 0.210317
#min_temp: 0
#max_temp: 105

[stepper_x]
step_pin: PC2
dir_pin: !PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ~!PA5
position_endstop: -6
position_min: -6
position_max: 230
homing_speed: 80

[tmc2209 stepper_x]
uart_pin: PB12
run_current: 0.60
#hold_current: 0.5
sense_resistor: 0.150
#stealthchop_threshold: 999999
interpolate: True

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ~!PA6
position_endstop: -14
position_min: -14
position_max: 230
homing_speed: 80

[tmc2209 stepper_y]
uart_pin: PB13
run_current: 0.60
#hold_current: 0.5
sense_resistor: 0.150
#stealthchop_threshold: 999999
interpolate: True

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_min: -3
position_max: 250
homing_speed: 4
second_homing_speed: 1
homing_retract_dist: 2.0

[tmc2209 stepper_z]
uart_pin: PB14
run_current: 0.8
#hold_current: 0.5
sense_resistor: 0.150
#stealthchop_threshold: 999999
interpolate: True

[extruder]
max_extrude_only_distance: 105.0
max_extrude_cross_section: 40
pressure_advance: 0.05
step_pin: PB4
dir_pin: PB3
enable_pin: !PC3
microsteps: 16
rotation_distance: 7.44
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC5
#control: pid
# tuned for stock hardware with 200 degree Celsius target
#pid_Kp: 27.142
#pid_Ki: 1.371
#pid_Kd: 134.351
min_temp: 0
max_temp: 260

[heater_bed]
heater_pin: PB2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
# tuned for stock hardware with 70 degree Celsius target
#pid_kp: 66.371
#pid_ki: 0.846
#pid_kd: 1301.702
min_temp: 0
max_temp: 100

[heater_fan hotend_fan]
heater_temp: 50.0
pin: PC1

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-path/platform-5200000.usb-usb-0:1.4:1.0-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 3800
max_accel_to_decel: 1900
max_z_velocity: 15
square_corner_velocity: 5.0
max_z_accel: 100

[bltouch]
sensor_pin: ^PC14
control_pin: PC13
x_offset: -23.0
y_offset: -14.5
#z_offset: 2.65
speed: 5
lift_speed: 15
pin_move_time: 0.4
stow_on_each_sample: False
probe_with_touch_mode: True

[safe_z_home]
home_xy_position: 134,123
speed: 250
z_hop: 10
z_hop_speed: 15


[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 30,30         # Need to handle head distance with cr-touch (bl_touch)
mesh_max: 207,215.5     # Max probe range (230-23,230-14.5)
probe_count: 5,5
algorithm: bicubic

# [display]
# NOT IMPLEMTED (assuming it even works)

[output_pin beeper]
pin: PB0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.130000, -0.075000, -0.015000, 0.020000, 0.042500
#*# 	  -0.115000, -0.060000, -0.055000, -0.012500, 0.000000
#*# 	  -0.115000, -0.060000, -0.057500, -0.022500, -0.022500
#*# 	  -0.070000, -0.030000, -0.002500, 0.000000, -0.047500
#*# 	  -0.037500, -0.025000, -0.035000, -0.012500, -0.060000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 207.0
#*# min_y = 30.0
#*# max_y = 215.47
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 30.511
#*# pid_ki = 1.816
#*# pid_kd = 128.148
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 62.844
#*# pid_ki = 0.747
#*# pid_kd = 1322.085
#*#
#*# [bltouch]
#*# z_offset = 2.230
